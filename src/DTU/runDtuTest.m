clc, clear all

setNum = 1:60;
% setNum = dtuSplitSets(6,1);
peakThresholdDog = 6.5;
peakThresholdHarris = 10^4;

method = struct('detector',{},'detectorArgs',{},'descriptor',{},...
    'descriptorArgs',{},'cache',{},'plotParams',{});
colour = 'gray';
matchCache = 1;

%method(end+1) = methodStruct( ...
%     'vl',{'method','DoG','peakthreshold',peakThresholdDog}, ...
%     'sift',{'colour',colour}, ...
%     matchCache, {'bx-'});
 method(end+1) = methodStruct( ...
    '',{}, ...
    'full-sift',{'colour',colour,'PeakThresh',peakThresholdDog}, ...
    matchCache,{'rx-'});

%method(end+1) = methodStruct( ...
%    'vl',{'method','dog','peakthreshold',peakThresholdDog,'cache',1}, ...
%   'cellhist',{...
%   'colour','gray',...
%   'contentType','go',...
%   'magnitudeType','m',...
%   'rescale',1/2,...
%   'gridType','polar central',...
%   'gridSize',[12 2],...
%   'gridRadius',12.5,...
%   'centerFilter','gaussian',...
%   'centerSigma',[1.3 1.3],...
%   'cellFilter','polar gaussian',...
%   'cellSigma',[0.9 0.9],...
%   'normType','pixel',...
%   'normSigma',[1.6 1.6],...
%   'binSigma',1.3,...
%   'binCount',12,...
%   'cellNormStrategy',0},...
%   matchCache,{'co-'});

% method(end) = modifyDescriptor(method(1),'contentType','si','magnitudeType','c');
% method(end).plotParams = {'go-'};
% 
% method(end+1) = modifyDescriptor(method(1),'magnitudeType','j2');
% method(end).plotParams = {'bo-'};
% 
% method(end+1) = modifyDescriptor(method(1),'contentType','l','magnitudeType','j2');
% method(end).plotParams = {'co-'};
% 
% method(end+1) = modifyDescriptor(method(1),'contentType','b','magnitudeType','j2');
% method(end).plotParams = {'mo-'};
% 
% method(end+1) = modifyDescriptor(method(1),'contentType','a','magnitudeType','j2');
% method(end).plotParams = {'yo-'};
% 
% method(end+1) = modifyDescriptor(method(1),'normType','cell');
% method(end).plotParams = {'ko-'};

profile off, profile on
totalTime = tic;
[ROC,PR] = dtuTest(setNum,method,1:6,false,false,'test')
totalTime = toc(totalTime)
profile off
profile viewer

[meanROC, stdROC] = computeMeanAuc(ROC,numel(setNum),numel(method));
[meanPR, stdPR] = computeMeanAuc(PR,numel(setNum),numel(method));
