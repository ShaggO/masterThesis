clear all; clc;

setNum = 8;
peakThresholdDog = 6.5;
peakThresholdHarris = 10^4;
colour = 'gray';
matchCache = 1;

method = methodStruct( ...
    'vl',{'method','dog','peakthreshold',peakThresholdDog,'cache',1}, ...
   'cellhist',{...
   'colour','gray',...
   'contentType','go',...
   'magnitudeType','m',...
   'rescale',1/2,...
   'gridType','polar central',...
   'gridSize',[8 3],...
   'gridRadius',10,...
   'centerFilter','gaussian',...
   'centerSigma',[1.3 1.3],...
   'cellFilter','gaussian',...
   'cellSigma',[1 1],...
   'normType','pixel',...
   'normSigma',[2 2],...
   'binSigma',1.15,...
   'binCount',8,...
   'cellNormStrategy',0,...
   'cache',1},...
   matchCache,{'co-'});

totalTime = tic;
method = enumOptimizeParameter(setNum,method, ...
    'centerSigma',{[1.3 1.3] [2 2] [3 3]});
method = enumOptimizeParameter(setNum,method, ...
    'centerFilter',{'gaussian' 'none'});
% [method,optimal] = zoomOptimizeParameter(setNum,method, ...
%     'centerSigma',[5 10 15 20]',2)

% %% Grid optimization
% gs = [24 1;20 1;16 1;12 1;8 1;4 1;12 2;8 2;4 2; ...
%     8 3;6 3;4 3;6 4;4 4;4 5;4 6];
% gsNormal = gs(gs(:,2) < 5,:);
% nNormal = size(gsNormal,1);
% gsConcen = gs(gs(:,2) > 1,:); 
% nConcen = size(gsConcen,1);
% 
% gridTypes = {};
% gridSizes = {};
% cellFilters = {};
% 
% gridTypes(1:5) = {'square'};
% gridSizes(1:5) = mat2cell([1:5;1:5]',ones(5,1),2);
% 
% gridTypes(end+(1:nNormal)) = {'polar'};
% gridSizes(end+(1:nNormal)) = mat2cell(gsNormal,ones(size(gsNormal,1),1),2);
% 
% gridTypes(end+(1:nConcen)) = {'concentric polar'};
% gridSizes(end+(1:nConcen)) = mat2cell(gsConcen,ones(size(gsConcen,1),1),2);
% 
% gridTypes(end+(1:nNormal)) = {'polar central'};
% gridSizes(end+(1:nNormal)) = mat2cell(gsNormal,ones(size(gsNormal,1),1),2);
% 
% gridTypes(end+(1:nConcen)) = {'concentric polar central'};
% gridSizes(end+(1:nConcen)) = mat2cell(gsConcen,ones(size(gsConcen,1),1),2);
% 
% n = 2*nNormal+2*nConcen;
% cellFilters(1:5+n) = {'gaussian'};
% cellFilters(5+n+(1:n)) = {'polar gaussian'};
% gridTypes(5+n+(1:n)) = gridTypes(5+(1:n));
% gridSizes(5+n+(1:n)) = gridSizes(5+(1:n));
% 
% disp(['Total number of grid parameters to test: ' num2str(numel(gridTypes))]);
% 
% [method,optimal] = enumOptimizeParameter(setNum,method, ...
%     'gridType',gridTypes,'gridSize',gridSizes,'cellFilter',cellFilters);

totalTime = toc(totalTime)